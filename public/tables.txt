create table public.appointments (
  appointment_id uuid not null default extensions.uuid_generate_v4 (),
  patient_id uuid null,
  phone text not null,
  email text not null,
  visit_type public.visit_type_enum not null,
  appointment_status public.process_status null default 'pending'::process_status,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  schedule public.schedule_enum not null,
  message text null,
  doctor_id uuid null,
  category_id uuid null,
  slot_id uuid null,
  appointment_date date null,
  appointment_time time without time zone null,
  preferred_date date null,
  preferred_time time without time zone null,
  constraint appointments_pkey primary key (appointment_id),
  constraint appointments_category_id_fkey foreign KEY (category_id) references service_categories (category_id) on delete set null,
  constraint appointments_doctor_id_fkey foreign KEY (doctor_id) references doctor_details (doctor_id) on delete set null,
  constraint appointments_patient_id_fkey foreign KEY (patient_id) references patients (id) on delete CASCADE,
  constraint appointments_slot_id_fkey foreign KEY (slot_id) references doctor_slot_assignments (doctor_slot_id) on delete set null
) TABLESPACE pg_default;



create table public.blog_posts (
  blog_id uuid not null default extensions.uuid_generate_v4 (),
  doctor_id uuid not null,
  blog_title text not null,
  blog_content text not null,
  excerpt text null,
  image_link text null,
  blog_tags json null,
  published_at timestamp with time zone null,
  blog_status public.blog_status null default 'draft'::blog_status,
  view_count integer null default 0,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  constraint blog_posts_pkey primary key (blog_id),
  constraint blog_posts_doctor_id_fkey foreign KEY (doctor_id) references staff_members (staff_id),
  constraint blog_posts_check check (
    (
      (
        (blog_status = 'published'::blog_status)
        and (published_at is not null)
      )
      or (blog_status <> 'published'::blog_status)
    )
  ),
  constraint blog_posts_view_count_check check ((view_count >= 0))
) TABLESPACE pg_default;

create table public.doctor_details (
  doctor_id uuid not null,
  department public.department_enum not null,
  speciality public.speciality_enum not null,
  about_me json null,
  license_no character varying(50) not null,
  bio text null,
  slogan text null,
  educations json null,
  certifications json null,
  constraint doctor_details_pkey primary key (doctor_id),
  constraint doctor_details_license_no_key unique (license_no),
  constraint doctor_details_doctor_id_fkey foreign KEY (doctor_id) references staff_members (staff_id) on delete CASCADE
) TABLESPACE pg_default;


create table public.doctor_services (
  id uuid not null default extensions.uuid_generate_v4 (),
  doctor_id uuid not null,
  service_id uuid not null,
  created_at timestamp with time zone null default now(),
  constraint doctor_services_pkey primary key (id),
  constraint doctor_services_unique unique (doctor_id, service_id),
  constraint doctor_services_doctor_id_fkey foreign KEY (doctor_id) references doctor_details (doctor_id) on delete CASCADE,
  constraint doctor_services_service_id_fkey foreign KEY (service_id) references medical_services (service_id) on delete CASCADE
) TABLESPACE pg_default;

create table public.doctor_slot_assignments (
  doctor_slot_id uuid not null default gen_random_uuid (),
  slot_id uuid not null,
  doctor_id uuid not null,
  appointments_count integer not null default 0,
  max_appointments integer not null default 2,
  constraint doctor_slot_assignments_pkey primary key (doctor_slot_id),
  constraint doctor_slot_assignments_unique unique (slot_id, doctor_id),
  constraint doctor_slot_assignments_doctor_id_fkey foreign KEY (doctor_id) references staff_members (staff_id) on delete CASCADE,
  constraint doctor_slot_assignments_slot_id_fkey foreign KEY (slot_id) references slots (slot_id) on delete CASCADE,
  constraint doctor_slot_assignments_count_check check (
    (
      (appointments_count >= 0)
      and (appointments_count <= max_appointments)
    )
  )
) TABLESPACE pg_default;


create table public.guest_appointments (
  guest_appointment_id uuid not null default extensions.uuid_generate_v4 (),
  guest_id uuid null,
  phone text not null,
  email text not null,
  visit_type public.visit_type_enum not null,
  appointment_status public.process_status null default 'pending'::process_status,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  schedule public.schedule_enum not null,
  message text null,
  appointment_date date null,
  appointment_time time without time zone null,
  doctor_id uuid null,
  slot_id uuid null,
  preferred_date date null,
  preferred_time time without time zone null,
  category_id uuid null,
  constraint guest_appointments_pkey primary key (guest_appointment_id),
  constraint guest_appointments_category_id_fkey foreign KEY (category_id) references service_categories (category_id),
  constraint guest_appointments_doctor_id_fkey foreign KEY (doctor_id) references doctor_details (doctor_id) on delete set null,
  constraint guest_appointments_guest_id_fkey foreign KEY (guest_id) references guests (guest_id) on delete CASCADE,
  constraint guest_appointments_slot_id_fkey foreign KEY (slot_id) references doctor_slot_assignments (doctor_slot_id) on delete set null
) TABLESPACE pg_default;

create table public.guest_notifications (
  notification_id uuid not null default extensions.uuid_generate_v4 (),
  appointment_id uuid null,
  staff_id uuid null,
  notification_type public.notification_type_enum not null,
  sent_at timestamp with time zone null default CURRENT_TIMESTAMP,
  constraint guest_notifications_pkey primary key (notification_id),
  constraint guest_notifications_appointment_id_fkey foreign KEY (appointment_id) references guest_appointments (guest_appointment_id) on delete CASCADE,
  constraint notifications_staff_id_fkey foreign KEY (staff_id) references staff_members (staff_id) on delete CASCADE
) TABLESPACE pg_default;

create table public.guests (
  guest_id uuid not null default extensions.uuid_generate_v4 (),
  full_name text null,
  phone text not null,
  email text not null,
  date_of_birth date not null,
  gender public.gender_enum not null,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  constraint guests_id_pkey primary key (guest_id)
) TABLESPACE pg_default;

create table public.logs (
  id bigint generated by default as identity not null,
  message jsonb null,
  created_at timestamp with time zone null default now(),
  constraint logs_pkey primary key (id)
) TABLESPACE pg_default;

create table public.medical_services (
  service_id uuid not null default extensions.uuid_generate_v4 (),
  category_id uuid not null,
  service_name text not null,
  service_cost numeric null,
  duration_minutes integer null,
  is_active boolean null default true,
  image_link text null,
  service_description json null,
  excerpt text null,
  constraint medical_services_pkey primary key (service_id),
  constraint medical_services_category_id_fkey foreign KEY (category_id) references service_categories (category_id) on delete CASCADE,
  constraint medical_services_duration_minutes_check check ((duration_minutes > 0)),
  constraint medical_services_service_cost_check check ((service_cost >= (0)::numeric))
) TABLESPACE pg_default;

create table public.notifications (
  notification_id uuid not null default extensions.uuid_generate_v4 (),
  appointment_id uuid null,
  staff_id uuid null,
  notification_type public.notification_type_enum not null,
  sent_at timestamp with time zone null default CURRENT_TIMESTAMP,
  constraint notifications_pkey primary key (notification_id),
  constraint notifications_appointment_id_fkey foreign KEY (appointment_id) references appointments (appointment_id) on delete CASCADE,
  constraint notifications_staff_id_fkey foreign KEY (staff_id) references staff_members (staff_id) on delete CASCADE
) TABLESPACE pg_default;

create table public.otps (
  id serial not null,
  phone text not null,
  otp_code text not null,
  created_at timestamp with time zone null default now(),
  expires_at timestamp with time zone not null,
  is_used boolean null default false,
  constraint otps_pkey primary key (id),
  constraint unique_phone_number unique (phone)
) TABLESPACE pg_default;

create table public.patient_reports (
  report_id uuid not null default extensions.uuid_generate_v4 (),
  patient_id uuid null,
  report_content text not null,
  report_description text null,
  staff_id uuid null,
  report_status public.report_status null default 'pending'::report_status,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  constraint patient_reports_pkey primary key (report_id),
  constraint patient_reports_patient_id_fkey foreign KEY (patient_id) references patients (id) on delete CASCADE,
  constraint patient_reports_staff_id_fkey foreign KEY (staff_id) references staff_members (staff_id)
) TABLESPACE pg_default;

create table public.patients (
  id uuid not null,
  full_name text not null,
  phone text not null,
  email character varying(255) not null,
  date_of_birth date null,
  gender public.gender_enum not null,
  allergies json null,
  chronic_conditions json null,
  past_surgeries json null,
  vaccination_status public.vaccination_status_enum not null default 'not_vaccinated'::vaccination_status_enum,
  patient_status public.patient_status not null default 'active'::patient_status,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  image_link text null,
  bio text null,
  constraint patients_pkey primary key (id),
  constraint patients_email_key unique (email),
  constraint patients_phone_key unique (phone),
  constraint patients_id_fkey foreign KEY (id) references auth.users (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.period_tracking (
  period_id uuid not null default extensions.uuid_generate_v4 (),
  patient_id uuid not null,
  start_date timestamp with time zone not null,
  end_date timestamp with time zone null,
  estimated_next_date timestamp with time zone null,
  cycle_length integer null,
  flow_intensity text null,
  symptoms json null,
  period_description text null,
  predictions json null,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  constraint period_tracking_pkey primary key (period_id),
  constraint period_tracking_patient_id_fkey foreign KEY (patient_id) references patients (id) on delete CASCADE,
  constraint period_tracking_cycle_length_check check ((cycle_length > 0)),
  constraint period_tracking_flow_intensity_check check (
    (
      flow_intensity = any (
        array['light'::text, 'medium'::text, 'heavy'::text]
      )
    )
  )
) TABLESPACE pg_default;

create table public.receipts (
  receipt_id uuid not null default extensions.uuid_generate_v4 (),
  patient_id uuid not null,
  amount numeric(10, 2) null,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  services json null,
  status public.receipt_status null default 'pending'::receipt_status,
  constraint receipts_pkey primary key (receipt_id),
  constraint receipts_patient_id_fkey foreign KEY (patient_id) references patients (id) on delete CASCADE,
  constraint receipts_amount_check check ((amount >= (0)::numeric))
) TABLESPACE pg_default;

create table public.refreshtoken (
  refreshtoken_id serial not null,
  patient_id uuid not null,
  token text not null,
  expires_at timestamp with time zone not null,
  is_revoked boolean null default false,
  created_at timestamp with time zone null default now(),
  constraint refreshtoken_pkey primary key (refreshtoken_id),
  constraint refreshtoken_patient_id_fkey foreign KEY (patient_id) references patients (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.service_categories (
  category_id uuid not null default extensions.uuid_generate_v4 (),
  category_name text not null,
  category_description text null,
  constraint service_categories_pkey primary key (category_id),
  constraint service_categories_category_name_key unique (category_name)
) TABLESPACE pg_default;

create table public.slots (
  slot_id uuid not null default gen_random_uuid (),
  slot_date date not null,
  slot_time time without time zone not null,
  is_active boolean not null default true,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint doctor_slots_pkey primary key (slot_id),
  constraint doctor_slots_unique_slot unique (slot_date, slot_time)
) TABLESPACE pg_default;

create table public.staff_history (
  history_id uuid not null default extensions.uuid_generate_v4 (),
  staff_id uuid not null,
  changed_by uuid not null,
  changed_at timestamp with time zone null default CURRENT_TIMESTAMP,
  field_name text not null,
  old_value json null,
  new_value json null,
  change_reason text null,
  constraint staff_history_pkey primary key (history_id),
  constraint staff_history_changed_by_fkey foreign KEY (changed_by) references staff_members (staff_id),
  constraint staff_history_staff_id_fkey foreign KEY (staff_id) references staff_members (staff_id) on delete CASCADE,
  constraint staff_history_field_name_check check (
    (
      field_name = any (
        array[
          'full_name'::text,
          'working_email'::text,
          'role'::text,
          'years_experience'::text,
          'hired_at'::text,
          'is_available'::text,
          'department'::text,
          'speciality'::text,
          'license_no'::text
        ]
      )
    )
  )
) TABLESPACE pg_default;

create table public.staff_members (
  staff_id uuid not null,
  full_name character varying(100) not null,
  working_email character varying(255) not null,
  role public.staff_role_enum not null,
  years_experience integer null,
  hired_at date not null,
  is_available boolean not null default true,
  staff_status public.staff_status null default 'active'::staff_status,
  created_at timestamp with time zone null default CURRENT_TIMESTAMP,
  updated_at timestamp with time zone null default CURRENT_TIMESTAMP,
  image_link text null,
  gender public.gender_enum null,
  languages json[] null,
  constraint staff_members_pkey primary key (staff_id),
  constraint staff_members_working_email_key unique (working_email),
  constraint staff_members_staff_id_fkey foreign KEY (staff_id) references auth.users (id) on delete CASCADE,
  constraint staff_members_years_experience_check check ((years_experience >= 0))
) TABLESPACE pg_default;
